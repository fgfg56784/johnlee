使用轮训解决zombie问题
父进程通过os.wait()来得到子进程是否终止的信息
在子进程终止和父进程调用wait()

观察僵尸进程
1. 子进程优先于父进程结束
2. 父进程没有处理僵尸进程的代码

python可以使用waitpid()来处理子进程
•  waitpid()接受两个参数,第一个参数设置为-1,表示与wait()函数相同;第二参数如果设置为0表示挂起父进程,直到子程序退出,设置为1表示不挂起父进程
•  waitpid()的返回值:如果子进程尚未结束则返回0,否则返回子进程的PID

watch -n1 ps a
waitpid()

多线程编程  与fork不同,fork 会产生僵尸进程,线程不会
多线程工作原理

多线程作用
提高工作效率
windows 只有多线程工作方式

编程思路
1.主线程生成工作线程
2.工作线程做具体的工作, 工作做完自动退出,也不会有僵尸进程问题

abs() 取绝对值

